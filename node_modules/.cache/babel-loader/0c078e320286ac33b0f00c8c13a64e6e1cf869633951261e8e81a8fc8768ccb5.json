{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\dev\\\\project2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Box, TextField, Button, Paper, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSend = async () => {\n    if (input.trim() === '') return;\n\n    // 사용자 메시지 추가\n    const newMessage = {\n      text: input,\n      sender: 'user',\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages([...messages, newMessage]);\n    setInput('');\n\n    // TODO: 여기에 백엔드 API 호출 로직 추가\n    // 백엔드 API 호출 예시\n    const response = await fetch('YOUR_BACKEND_API_URL', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: input\n      })\n    });\n    const data = await response.json();\n\n    // 임시 응답 메시지\n    setTimeout(() => {\n      const botResponse = {\n        text: \"죄송합니다. 아직 백엔드가 연결되지 않았습니다.\",\n        sender: 'bot',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, botResponse]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        py: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"\\uAC15\\uC544\\uC9C0 \\uC815\\uBCF4 \\uCC57\\uBD07\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          flex: 1,\n          mb: 2,\n          p: 2,\n          overflow: 'auto',\n          backgroundColor: '#f5f5f5'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                justifyContent: message.sender === 'user' ? 'flex-end' : 'flex-start'\n              },\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                sx: {\n                  p: 2,\n                  backgroundColor: message.sender === 'user' ? '#e3f2fd' : '#fff',\n                  maxWidth: '70%'\n                },\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: message.text,\n                  secondary: message.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              handleSend();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 22\n          }, this),\n          onClick: handleSend,\n          children: \"\\uC804\\uC1A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Box","TextField","Button","Paper","Typography","List","ListItem","ListItemText","Divider","SendIcon","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","handleSend","trim","newMessage","text","sender","timestamp","Date","toLocaleTimeString","response","fetch","method","headers","body","JSON","stringify","message","data","json","setTimeout","botResponse","prev","maxWidth","children","sx","height","display","flexDirection","py","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","elevation","flex","mb","p","overflow","backgroundColor","map","index","Fragment","justifyContent","primary","secondary","gap","fullWidth","placeholder","value","onChange","e","target","onKeyPress","key","endIcon","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/dev/project2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n  Container, \r\n  Box, \r\n  TextField, \r\n  Button, \r\n  Paper, \r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim() === '') return;\r\n    \r\n    // 사용자 메시지 추가\r\n    const newMessage = {\r\n      text: input,\r\n      sender: 'user',\r\n      timestamp: new Date().toLocaleTimeString()\r\n    };\r\n    \r\n    setMessages([...messages, newMessage]);\r\n    setInput('');\r\n\r\n    // TODO: 여기에 백엔드 API 호출 로직 추가\r\n    // 백엔드 API 호출 예시\r\n    const response = await fetch('YOUR_BACKEND_API_URL', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ message: input }),\r\n    });\r\n    const data = await response.json();\r\n\r\n    // 임시 응답 메시지\r\n    setTimeout(() => {\r\n      const botResponse = {\r\n        text: \"죄송합니다. 아직 백엔드가 연결되지 않았습니다.\",\r\n        sender: 'bot',\r\n        timestamp: new Date().toLocaleTimeString()\r\n      };\r\n      setMessages(prev => [...prev, botResponse]);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box sx={{ height: '100vh', display: 'flex', flexDirection: 'column', py: 2 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\r\n          강아지 정보 챗봇\r\n        </Typography>\r\n        \r\n        <Paper \r\n          elevation={3} \r\n          sx={{ \r\n            flex: 1, \r\n            mb: 2, \r\n            p: 2, \r\n            overflow: 'auto',\r\n            backgroundColor: '#f5f5f5'\r\n          }}\r\n        >\r\n          <List>\r\n            {messages.map((message, index) => (\r\n              <React.Fragment key={index}>\r\n                <ListItem \r\n                  sx={{ \r\n                    justifyContent: message.sender === 'user' ? 'flex-end' : 'flex-start'\r\n                  }}\r\n                >\r\n                  <Paper\r\n                    sx={{\r\n                      p: 2,\r\n                      backgroundColor: message.sender === 'user' ? '#e3f2fd' : '#fff',\r\n                      maxWidth: '70%'\r\n                    }}\r\n                  >\r\n                    <ListItemText \r\n                      primary={message.text}\r\n                      secondary={message.timestamp}\r\n                    />\r\n                  </Paper>\r\n                </ListItem>\r\n                <Divider />\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n        </Paper>\r\n\r\n        <Box sx={{ display: 'flex', gap: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"메시지를 입력하세요...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyPress={(e) => {\r\n              if (e.key === 'Enter') {\r\n                handleSend();\r\n              }\r\n            }}\r\n          />\r\n          <Button \r\n            variant=\"contained\" \r\n            endIcon={<SendIcon />}\r\n            onClick={handleSend}\r\n          >\r\n            전송\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}